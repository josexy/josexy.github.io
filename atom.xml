<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>JoXrays&#39;s Blog</title>
  
  <subtitle>All my interesting ...</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.joxrays.com/"/>
  <updated>2020-03-20T03:03:20.428Z</updated>
  <id>http://www.joxrays.com/</id>
  
  <author>
    <name>Joseph XRays</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux RDP远程桌面连接Windows</title>
    <link href="http://www.joxrays.com/linux-rdp-windows/"/>
    <id>http://www.joxrays.com/linux-rdp-windows/</id>
    <published>2020-03-10T16:00:00.000Z</published>
    <updated>2020-03-20T03:03:20.428Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;远程桌面协议RDP（Remote Desktop Protocol）是Microsoft开发的专有协议，它为用户提供图形界面以通过网络连接到另一台计算机。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.joxrays.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.joxrays.com/tags/Linux/"/>
    
      <category term="Windows" scheme="http://www.joxrays.com/tags/Windows/"/>
    
      <category term="RDP" scheme="http://www.joxrays.com/tags/RDP/"/>
    
  </entry>
  
  <entry>
    <title>哈夫曼编码实现解压缩文本文件</title>
    <link href="http://www.joxrays.com/huffman-encode-decode/"/>
    <id>http://www.joxrays.com/huffman-encode-decode/</id>
    <published>2020-03-01T16:00:00.000Z</published>
    <updated>2020-03-02T16:47:16.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;之前已经简单地介绍了LZW 编码实现的原理，它由一个初始字典在编码/解码的过程中不断的扩增字典内容，从而在下一次编码/解码遇到重复的文本串时从字典中找出之前的代码并写入文本文件，这样就避免了重复的文本而达到文本文件空间缩小的目的。本文主要从&lt;s&gt;简单介绍&lt;/s&gt;哈夫曼树过渡到编码解码内容。&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构与算法" scheme="http://www.joxrays.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="C++" scheme="http://www.joxrays.com/tags/C/"/>
    
      <category term="DataStructures" scheme="http://www.joxrays.com/tags/DataStructures/"/>
    
      <category term="C" scheme="http://www.joxrays.com/tags/C/"/>
    
      <category term="Huffman" scheme="http://www.joxrays.com/tags/Huffman/"/>
    
  </entry>
  
  <entry>
    <title>LZW文本压缩</title>
    <link href="http://www.joxrays.com/lzw-cpp/"/>
    <id>http://www.joxrays.com/lzw-cpp/</id>
    <published>2020-02-21T16:00:00.000Z</published>
    <updated>2020-02-22T10:35:12.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;最近翻看《数据结构、算法与应用》里面关于哈希表章节时看到一个LZW文本压缩算法的实例，啃了很久才基本了解LZW算法，于是赶紧把它记录下来方便日后翻看。&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构与算法" scheme="http://www.joxrays.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="C++" scheme="http://www.joxrays.com/tags/C/"/>
    
      <category term="DataStructures" scheme="http://www.joxrays.com/tags/DataStructures/"/>
    
      <category term="C" scheme="http://www.joxrays.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>CentOS+TinyProxy+Stunnel配置HTTP代理服务器</title>
    <link href="http://www.joxrays.com/linux-tinyproxy/"/>
    <id>http://www.joxrays.com/linux-tinyproxy/</id>
    <published>2020-02-16T16:00:00.000Z</published>
    <updated>2020-02-17T15:26:52.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本文将利用CentOS、TinyProxy、Stunnel搭建一个正向代理服务器…&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.joxrays.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.joxrays.com/tags/Linux/"/>
    
      <category term="CentOS" scheme="http://www.joxrays.com/tags/CentOS/"/>
    
      <category term="TinyProxy" scheme="http://www.joxrays.com/tags/TinyProxy/"/>
    
      <category term="HTTP" scheme="http://www.joxrays.com/tags/HTTP/"/>
    
      <category term="HTTPS" scheme="http://www.joxrays.com/tags/HTTPS/"/>
    
  </entry>
  
  <entry>
    <title>Manjaro/Arch禁用独显</title>
    <link href="http://www.joxrays.com/linux-ban-nvidia/"/>
    <id>http://www.joxrays.com/linux-ban-nvidia/</id>
    <published>2020-02-13T16:00:00.000Z</published>
    <updated>2020-02-14T06:31:26.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;由于本人笔记本是双显卡的，曾几度尝试安装闭源NVIDIA驱动（为了hashcat），然而每次以失败告终，而系统自带的开源nouveau驱动实在太坑了，系统总是会出现一些莫名其妙的bug，忍无可忍之下干脆禁掉独显，只用核显得了。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.joxrays.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.joxrays.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>二叉堆-堆排序</title>
    <link href="http://www.joxrays.com/binaryheap-cpp/"/>
    <id>http://www.joxrays.com/binaryheap-cpp/</id>
    <published>2020-02-04T16:00:00.000Z</published>
    <updated>2020-03-02T08:17:34.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;堆是实现&lt;strong&gt;优先级队列&lt;/strong&gt;效率很高的数据结构，如C++STL priority_queue、Python PriorityQueue。堆的变体很多，二叉堆、斐波那契堆…由堆实现的一种高效排序算法为堆排序。&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构与算法" scheme="http://www.joxrays.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="C++" scheme="http://www.joxrays.com/tags/C/"/>
    
      <category term="DataStructures" scheme="http://www.joxrays.com/tags/DataStructures/"/>
    
      <category term="C" scheme="http://www.joxrays.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>我所理解的红黑树(RBT)</title>
    <link href="http://www.joxrays.com/rb-tree-cpp/"/>
    <id>http://www.joxrays.com/rb-tree-cpp/</id>
    <published>2020-01-31T16:00:00.000Z</published>
    <updated>2020-02-03T03:54:06.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;红黑树（Red–Black Tree）是一种自平衡二叉查找树，用于实现&lt;strong&gt;关联数组&lt;/strong&gt;。它在1972年由鲁道夫·贝尔（Rudolf Bayer）发明，被称为&amp;quot;对称二叉B树&amp;quot;。&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构与算法" scheme="http://www.joxrays.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="C++" scheme="http://www.joxrays.com/tags/C/"/>
    
      <category term="DataStructures" scheme="http://www.joxrays.com/tags/DataStructures/"/>
    
      <category term="C" scheme="http://www.joxrays.com/tags/C/"/>
    
      <category term="红黑树" scheme="http://www.joxrays.com/tags/%E7%BA%A2%E9%BB%91%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>数据结构-AVL树</title>
    <link href="http://www.joxrays.com/avl-tree-cpp/"/>
    <id>http://www.joxrays.com/avl-tree-cpp/</id>
    <published>2020-01-20T16:00:00.000Z</published>
    <updated>2020-03-20T02:30:38.220Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;AVL树是最早被发明的&lt;strong&gt;自平衡二叉查找树&lt;/strong&gt;。其查找、插入和删除在&lt;strong&gt;平均&lt;/strong&gt;和&lt;strong&gt;最坏&lt;/strong&gt;情况下的时间复杂度都是 &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;log&lt;/mi&gt;&lt;mo&gt;⁡&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;O(\log n)&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;O&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mop&quot;&gt;lo&lt;span style=&quot;margin-right:0.01389em;&quot;&gt;g&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;。AVL树由&lt;strong&gt;G. M. Adelson-Velsky&lt;/strong&gt;和&lt;strong&gt;Evgenii Landis&lt;/strong&gt;发明，AVL树的名称取自他们名字中的字母。&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构与算法" scheme="http://www.joxrays.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="C++" scheme="http://www.joxrays.com/tags/C/"/>
    
      <category term="DataStructures" scheme="http://www.joxrays.com/tags/DataStructures/"/>
    
      <category term="C" scheme="http://www.joxrays.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>数据结构-二叉查找树(BST)</title>
    <link href="http://www.joxrays.com/bst-cpp/"/>
    <id>http://www.joxrays.com/bst-cpp/</id>
    <published>2020-01-14T16:00:00.000Z</published>
    <updated>2020-01-20T09:45:16.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;在计算机科学中，树是一种&lt;strong&gt;非线性数据结构&lt;/strong&gt;，树的种类有大致分为两类:&lt;strong&gt;无序树&lt;/strong&gt;和&lt;strong&gt;有序树&lt;/strong&gt;。有序树又分为二叉查找树、堆、左高树、AVL树、红黑树等。树是一种非常重要的数据结构，如C++ STL中的map底层实现原理是红黑树，Java (jdk1.8) HashMap更是采用了散列表+链表+红黑树。&lt;br&gt;
不过在讨论二叉查找树之前，我们需要了解树的一些基本知识。&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构与算法" scheme="http://www.joxrays.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="C++" scheme="http://www.joxrays.com/tags/C/"/>
    
      <category term="DataStructures" scheme="http://www.joxrays.com/tags/DataStructures/"/>
    
      <category term="C" scheme="http://www.joxrays.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>数据结构-跳跃表C++实现</title>
    <link href="http://www.joxrays.com/skiplist-cpp/"/>
    <id>http://www.joxrays.com/skiplist-cpp/</id>
    <published>2020-01-14T16:00:00.000Z</published>
    <updated>2020-01-15T05:49:12.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;跳跃表/跳表(SkipList)&lt;br&gt;
In computer science, a skip list is a data structure that allows &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;log&lt;/mi&gt;&lt;mo&gt;⁡&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;O(\log n)&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;O&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mop&quot;&gt;lo&lt;span style=&quot;margin-right:0.01389em;&quot;&gt;g&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; search complexity as well as &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;log&lt;/mi&gt;&lt;mo&gt;⁡&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;O(\log n)&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;O&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mop&quot;&gt;lo&lt;span style=&quot;margin-right:0.01389em;&quot;&gt;g&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; insertion complexity within an ordered sequence of &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;n&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.43056em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; elements.  —— 维基百科&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构与算法" scheme="http://www.joxrays.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="C++" scheme="http://www.joxrays.com/tags/C/"/>
    
      <category term="DataStructures" scheme="http://www.joxrays.com/tags/DataStructures/"/>
    
      <category term="C" scheme="http://www.joxrays.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>数据结构-队列</title>
    <link href="http://www.joxrays.com/queue-cpp/"/>
    <id>http://www.joxrays.com/queue-cpp/</id>
    <published>2020-01-12T16:00:00.000Z</published>
    <updated>2020-01-13T11:48:08.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;队列是一种先进先出(FIFO)的数据结构，与栈(后进先出LIFO)不同，但两者都是线性结构，因此可以用线性表去描述队列，本文主要是用数组去实现一个简单的队列&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构与算法" scheme="http://www.joxrays.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="C++" scheme="http://www.joxrays.com/tags/C/"/>
    
      <category term="DataStructures" scheme="http://www.joxrays.com/tags/DataStructures/"/>
    
      <category term="C" scheme="http://www.joxrays.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>数据结构-C++链表实现</title>
    <link href="http://www.joxrays.com/linkedlist-cpp/"/>
    <id>http://www.joxrays.com/linkedlist-cpp/</id>
    <published>2020-01-10T16:00:00.000Z</published>
    <updated>2020-01-13T04:55:00.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;最近在研究《数据结构、算法与应用C++语言描述》，把一些自己的看法和代码实现写在这里，算是个记录吧，以免以后忘记。&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构与算法" scheme="http://www.joxrays.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="C++" scheme="http://www.joxrays.com/tags/C/"/>
    
      <category term="DataStructures" scheme="http://www.joxrays.com/tags/DataStructures/"/>
    
      <category term="C" scheme="http://www.joxrays.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C++简单实现MySQL表格输出功能</title>
    <link href="http://www.joxrays.com/cpp-printtable/"/>
    <id>http://www.joxrays.com/cpp-printtable/</id>
    <published>2019-11-29T16:00:00.000Z</published>
    <updated>2019-11-30T02:11:52.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;其实在很早之前，我就对MySQL的表格输出很感兴趣并想用C++实现，主要是因为它支持中文输出。因此前一段时间我实现了第一版的MyPrettyTable(简化版的Python的库PrettyTable?)，然而令人失望的是它在含有中文汉字的情况下会发生混乱而无法对齐，于是我放弃了。不过昨天在写代码时偶然看到之前那个被搁置的project，于是不甘心的我再次重新实现了这个功能…其实就是利用的setw和left&lt;/p&gt;
    
    </summary>
    
      <category term="Programming" scheme="http://www.joxrays.com/categories/Programming/"/>
    
    
      <category term="C++" scheme="http://www.joxrays.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>位运算实现加减乘除</title>
    <link href="http://www.joxrays.com/add-subtract-multiply-divide/"/>
    <id>http://www.joxrays.com/add-subtract-multiply-divide/</id>
    <published>2019-11-20T16:00:00.000Z</published>
    <updated>2019-11-21T15:28:26.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;计算机内部实现数据的加减乘除运算是通过对二进制位运算来实现的，基本运算&amp;quot; + - × ÷ &amp;quot; 均可转换为位运算。&lt;/p&gt;
    
    </summary>
    
      <category term="Programming" scheme="http://www.joxrays.com/categories/Programming/"/>
    
    
      <category term="C++" scheme="http://www.joxrays.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Linux Vim YCM配置</title>
    <link href="http://www.joxrays.com/linux-ycm-vim/"/>
    <id>http://www.joxrays.com/linux-ycm-vim/</id>
    <published>2019-09-08T16:00:00.000Z</published>
    <updated>2020-01-12T14:49:02.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;由于之前不小心把vim的配置删了，致使之前的那篇文章无法访问，但为了回应有关网友的回复，特此重新编辑了vim的ycm配置。😃&lt;/p&gt;
&lt;p&gt;YCM全称 YouCompleteMe，是一个vim插件，但是却是一个能够使代码自动补全的工具。虽然如此，但也还是无法与专用IDE相媲美，不过对于vim党来说却是一个十分有趣的插件。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.joxrays.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.joxrays.com/tags/Linux/"/>
    
      <category term="Vim" scheme="http://www.joxrays.com/tags/Vim/"/>
    
      <category term="YCM" scheme="http://www.joxrays.com/tags/YCM/"/>
    
  </entry>
  
  <entry>
    <title>CentOS服务器Shadowsocks</title>
    <link href="http://www.joxrays.com/centos-shadowsocks/"/>
    <id>http://www.joxrays.com/centos-shadowsocks/</id>
    <published>2019-08-20T16:00:00.000Z</published>
    <updated>2019-08-21T04:23:10.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;在很久之前我用Windows时一直使用 &lt;strong&gt;SoftEther VPN&lt;/strong&gt; 来访问外网，但现在已经转向了SS，而且仅是通过转发流量来科学上网的话，无疑SS是最合适的，因此在 hostwinds 上也买了一台centos7服务器准备搭建shadowsocks。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.joxrays.com/categories/Linux/"/>
    
    
      <category term="CentOS" scheme="http://www.joxrays.com/tags/CentOS/"/>
    
      <category term="Shadowsocks" scheme="http://www.joxrays.com/tags/Shadowsocks/"/>
    
  </entry>
  
  <entry>
    <title>VirtualBox添加raw disk时出现VERR_ACCESS_DENIED</title>
    <link href="http://www.joxrays.com/virtualbox-addrawdisk-err/"/>
    <id>http://www.joxrays.com/virtualbox-addrawdisk-err/</id>
    <published>2019-08-19T16:00:00.000Z</published>
    <updated>2019-08-20T14:32:40.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本来想在virtualbox里U盘启动，用 vboxmanage 创建就可以完成的然而却在启动时发生了错误，这里把错误过程记录下来&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.joxrays.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.joxrays.com/tags/Linux/"/>
    
      <category term="VirtualBox" scheme="http://www.joxrays.com/tags/VirtualBox/"/>
    
  </entry>
  
  <entry>
    <title>Linux Terminal 显示图像</title>
    <link href="http://www.joxrays.com/linux-tiv/"/>
    <id>http://www.joxrays.com/linux-tiv/</id>
    <published>2019-08-11T16:00:00.000Z</published>
    <updated>2019-08-12T03:50:12.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;其实很久之前我就在想linux终端里能否显示图像呢？然而这个问题一直拖延至今，直到google过程中发现了Tiv(&lt;strong&gt;TerminalImageViewer&lt;/strong&gt;)&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.joxrays.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.joxrays.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>VirtualBox安装manjaro后安装增强功能</title>
    <link href="http://www.joxrays.com/virtual-manjaro-guest-iso/"/>
    <id>http://www.joxrays.com/virtual-manjaro-guest-iso/</id>
    <published>2019-08-06T16:00:00.000Z</published>
    <updated>2019-08-07T04:43:14.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;一般来说，VirtualBox成功安装manjaro后可以在 [设备] -&amp;gt; [安装增强功能]。然而有时却事与愿违的怎么也无法安装，那么这时我们就可以在manjaro里自行安装 VBoxGuestAdditions，let’s go!&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.joxrays.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.joxrays.com/tags/Linux/"/>
    
      <category term="Archlinux" scheme="http://www.joxrays.com/tags/Archlinux/"/>
    
  </entry>
  
  <entry>
    <title>Archlinux从安装到基本配置</title>
    <link href="http://www.joxrays.com/archlinux-configure/"/>
    <id>http://www.joxrays.com/archlinux-configure/</id>
    <published>2019-07-29T16:00:00.000Z</published>
    <updated>2020-02-27T11:11:34.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;这里介绍从安装archlinux系统到基本配置过程，基本搜集了网上和官方wiki整理而来的，把错误最低化。当然，本文也是作为我的一份手册吧…&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.joxrays.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.joxrays.com/tags/Linux/"/>
    
      <category term="Archlinux" scheme="http://www.joxrays.com/tags/Archlinux/"/>
    
  </entry>
  
</feed>
